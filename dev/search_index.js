var documenterSearchIndex = {"docs":
[{"location":"#TensorPolynomialBases.jl-1","page":"Home","title":"TensorPolynomialBases.jl","text":"","category":"section"},{"location":"#Quick-start-1","page":"Home","title":"Quick start","text":"","category":"section"},{"location":"#Create-a-vector-valued-monomial-basis-of-P-polynomials-in-2-variables-1","page":"Home","title":"Create a vector-valued monomial basis of P-polynomials in 2 variables","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"using TensorPolynomialBases\nusing StaticArrays\n\n# Define a filter to select the monomials in the P-space\nfilter(e,order) = sum(e) <= order\n\norder= 4\nP = SVector{2,Float64} # type of the evaluation point\nV = SVector{3,Float64} # type of the value\n\nbasis = MonomialBasis{P,V}(filter,order)\n\n# Create scratch data that can be reused between evaluations\ncache = ScratchData(basis)\n\n# Evaluation point\nx = @SVector rand(3)\n\n# Evaluation\nv = zeros(V,length(basis))\nevaluate!(v,basis,x,cache) # No memory allocation here\n@show v\n\n# Evaluation of the gradient\nG = gradient_type(basis)\n# G == SMatrix{2,3,T,6}\nv = zeros(G,length(basis))\ngradient!(v,basis,x,cache) # No memory allocation here\n@show v","category":"page"},{"location":"#Create-a-Tensor-valued-monomial-basis-of-the-\"serendipity\"-space-in-3-variables-(this-time-using-the-types-of-the-TensorValues-package)-1","page":"Home","title":"Create a Tensor-valued monomial basis of the \"serendipity\" space in 3 variables (this time using the types of the TensorValues package)","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"using TensorValues\n\n# Define the filter for the serendipity space\nfilter(e,order) = sum( ( i for i in e if i>1 ) ) <= order\n\norder= 3\nP = VectorValue{3,Float64} # type of the evaluation point\nV = TensorValue{3,Float64,9} # type of the value (3x3 tensor)\n\nbasis = MonomialBasis{P,V}(filter,order)\n\n# Create scratch data that can be reused between evaluations\ncache = ScratchData(basis)\n\n# Evaluation point\nx = VectorValue(0.1,2.0,3.1)\n\n# Evaluation\nv = zeros(V,length(basis))\nevaluate!(v,basis,x,cache) # No memory allocation here\n@show v\n","category":"page"},{"location":"pages/api/#API-1","page":"API","title":"API","text":"","category":"section"},{"location":"pages/api/#","page":"API","title":"API","text":"Modules = [TensorPolynomialBases]","category":"page"}]
}
